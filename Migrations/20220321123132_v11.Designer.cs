// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Odnesi.Migrations
{
    [DbContext(typeof(OdnesiContext))]
    [Migration("20220321123132_v11")]
    partial class v11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("KategorijaProdavnica", b =>
                {
                    b.Property<int>("KategorijeProdavniceIdKategorije")
                        .HasColumnType("int");

                    b.Property<int>("KategorijeProdavniceIdProdavnice")
                        .HasColumnType("int");

                    b.HasKey("KategorijeProdavniceIdKategorije", "KategorijeProdavniceIdProdavnice");

                    b.HasIndex("KategorijeProdavniceIdProdavnice");

                    b.ToTable("KategorijaProdavnica");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.Property<int>("IdKategorije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdKategorije");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("Models.Prodavnica", b =>
                {
                    b.Property<int>("IdProdavnice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdProdavnice");

                    b.ToTable("Prodavnica");
                });

            modelBuilder.Entity("Models.Proizvodi", b =>
                {
                    b.Property<int>("IdProizvoda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaIdKategorije")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Popust")
                        .HasColumnType("int");

                    b.HasKey("IdProizvoda");

                    b.HasIndex("KategorijaIdKategorije");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("KategorijaProdavnica", b =>
                {
                    b.HasOne("Models.Kategorija", null)
                        .WithMany()
                        .HasForeignKey("KategorijeProdavniceIdKategorije")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Prodavnica", null)
                        .WithMany()
                        .HasForeignKey("KategorijeProdavniceIdProdavnice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Proizvodi", b =>
                {
                    b.HasOne("Models.Kategorija", null)
                        .WithMany("ProizvodiKategorije")
                        .HasForeignKey("KategorijaIdKategorije");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.Navigation("ProizvodiKategorije");
                });
#pragma warning restore 612, 618
        }
    }
}
